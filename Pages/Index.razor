@page "/"
@using BlazingPizza.Data
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<div class="main">
  <h1>Blazing Pizzas</h1>
  <ul class="pizza-cards">
    @if (specials != null && specials.Count > 0)
    {
      foreach (var special in specials)
      {
        <li @onclick="@(() => ShowConfigurePizzaDialog(special))" style="background-image: url('@special.ImageUrl');">
          <div class="pizza-info">
            <span class="title">@special.Name</span>
            @special.Description
            <span class="price">@special.GetFormattedBasePrice()</span>
          </div>
        </li>
      }
    }
    else
    {
      <li>No specials available at this time.</li>
    }
  </ul>
</div>  	

@code {
    private List<PizzaSpecial> specials = new();

    Pizza configuringPizza;
    bool showingConfigureDialog;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            specials = await HttpClient.GetFromJsonAsync<List<PizzaSpecial>>(NavigationManager.BaseUri + "specials");
        }
        catch (Exception ex)
        {
            // Log or handle the error as needed
            specials = new List<PizzaSpecial>();
            Console.Error.WriteLine($"Failed to load specials: {ex.Message}");
        }
    }

    void ShowConfigurePizzaDialog(PizzaSpecial special)
    {
        configuringPizza = new Pizza()
        {
            Special = special,
            SpecialId = special.Id,
            Size = Pizza.DefaultSize
        };

        showingConfigureDialog = true;
    }
}